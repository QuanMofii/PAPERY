import type { ReactNode } from 'react';
import type { Metadata } from 'next';
import localFont from 'next/font/local';

import { ThemeProvider } from '@/context/theme-context';
import {NextIntlClientProvider, hasLocale} from 'next-intl';
import {notFound} from 'next/navigation';
import {routing} from '@/lib/next-intl/routing';

import { getCurrentUser } from '@/actions/user-action';
import { getTheme } from '@/actions/theme-action';
import '@/app/[locale]/globals.css';
import { TokenRefresher } from '@/components/token-refresher';
import { UserProvider } from '@/context/user-context';
import { Toaster } from '@/registry/new-york-v4/ui/sonner';

const geistSans = localFont({
    src: './fonts/GeistVF.woff',
    variable: '--font-geist-sans',
    weight: '100 900'
});
const geistMono = localFont({
    src: './fonts/GeistMonoVF.woff',
    variable: '--font-geist-mono',
    weight: '100 900'
});

export const metadata: Metadata = {
    title: 'Create Next App',
    description: 'Generated by create next app'
};

export default async function RootLayout({  children,
    params
  }: {
    children: React.ReactNode;
    params: Promise<{locale: string}>;
  }) {
    const {locale} = await params;
    if (!hasLocale(routing.locales, locale)) {
      notFound();
    }

    const [currentUser, theme] = await Promise.all([
      getCurrentUser(),
      getTheme()
    ]);

    return (
        <html suppressHydrationWarning lang={locale} className={`theme-${theme} !scroll-smooth`}>
            <body
                className={`${geistSans.variable} ${geistMono.variable} bg-background text-foreground h-full w-full overscroll-none antialiased`}>
                <NextIntlClientProvider>
                    <ThemeProvider initialTheme={theme}>
                        <UserProvider initialUser={currentUser}>
                            {children}
                            <TokenRefresher />
                        </UserProvider>
                        <Toaster />
                    </ThemeProvider>
                </NextIntlClientProvider>
            </body>
        </html>
    );
}
